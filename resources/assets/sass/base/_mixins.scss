// Mixins should be included first in a rule


@mixin section {
	margin-top: 10%;
	margin-bottom: 10%;
	@media (max-width:991px) {
		padding-right: 7%;
		padding-left: 7%;
	}
		// @media #{$brk-sm} { 
		// 	height: 400px;
		// }
		// @media #{$brk-md}{
		// 	height: 450px;
		// }
		// @media #{$brk-lg}{
}
 
// Text
@mixin text($size: nul, $l-height: null, $weight: null, $color: null) {  //null is excepted for all args
  font-size: $size;
  line-height: $l-height;
  font-weight: $weight;
  color: $color;
}


// Background Image
@mixin bg_img ($img) {
	background-image: url('#{$path--img}/#{$img}');
	background-position: center center;
	background-repeat: no-repeat;
	background-size: cover;
	background-size: cover;
	-webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
	// width: 100%;
	height: 300px;
		@media #{$brk-sm} { 
			height: 400px;
		}
		@media #{$brk-md}{
			height: 450px;
		}
		@media #{$brk-lg}{
			background-attachment: fixed !important;
			height: 500px;
		}
}






// Media queries

// Media queries

@mixin mq($breakpoint) {

  $mq-xs: "(max-width: 767px)";
  $mq-sm: "(min-width: 768px) and (max-width: 991px)";
  $mq-md: "(min-width: 992px) and (max-width: 1199px)";
  $mq-lg: "(min-width: 1200px)";

  @if $breakpoint == xs {
    @media #{$mq-xs} { @content; }
  }
  @else if $breakpoint == sm {
    @media #{$mq-sm} { @content; }
  }
  @else if $breakpoint == md {
    @media #{$mq-md}  { @content; }
  }
  @else if $breakpoint == lg {
    @media #{$mq-lg}  { @content; }
  }
}










// @mixin mq($break) {

//   @if $break == "small" {
//     @media (min-width: $brkpoint-sm) and (max-width: $brkpoint-md) {
//       @content;
//     }
//   }
//   @else if $break == "medium" {
//     @media (min-width: $brkpoint-md + 1) {
//       @content;
//     }
//   }
//   @else if $break == "large" {
//     @media (min-width: $brkpoint-lg) {
//       @content;
//     }
//   }
//    @else {
//    	@error "Whoops! No value could be retrieved for `#{$break}`. "
//   }
// }